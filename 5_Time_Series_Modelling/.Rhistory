pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts<-filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts)
top_counts_sorted<-arrange(top_counts,desc(counts))
top_counts_sorted<-arrange(top_counts,desc(count))
View(top_counts)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit
submit()
submit()
submit()
View(result3)
submit()
submit()
reset()
swirl()
swirl()
library(tidyr)
students
scan
swirl()
scan()
x <- scan()
x
x <- scan()
library(swirl)
swirl()
arrange(cran2,country,desc(r_version),ip_id)
cran<-select(cran,ip_id,package,size)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=1000)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran)
by_package<-group_by(cran,package)
by_package
summarize(by_package,mean(size))
submit()
submit()
pack_sum
library(swirl)
swirl()
submit()
students4
submit()
submit
submit()
submit()
submit()
passed
failed
mutate(passed,status="passed")
passed<-passed %>%
mutate(status="passed")
failed <- failed %>%
mutate(status = "failed")
bind_rows(passed,failed)
sat
View(sat)
View(sat)
submit()
submit()
install_course("Open Intro")
install_course("Open Intro")
install_course_zip("C:\\Users\\Mukesh\\Downloads\\swirl_courses-master.zip", multi=TRUE,
which_course="Open Intro")
swirl_options()
swirl()
y <- 100
type(cars)
Type(cars)
typeof(cars)
cars$type
sqrt(y)
z<-sqrt(y)
?sqrt
save(num_vect,file = num_vect.rda)
save(num_vect,num_vect.rda)
?save
save(list = ls(all.names = TRUE))
save(list = ls(all.names = TRUE),file = ".Rdata")
save(list = ls(all.names = TRUE),file = ".Rdata")
getwd
getwd()
save(num_vect,file = "num_vect.rda")
rm(num_vect)
ls
ls()
load("num_vect.rda")
ls
ls()
ls(num_vect)
num_vect
rm(num_vect)
load("num_vect.rda")
num_vect
library(ggplot2)#For Visulaization
library(ggplot2)  # For Visulaization
library(lattice)  # Support package for visualization
library(stats)    # for statistical calculations and random number generation.
library(cluster)  # for plotting clusters with clusplot()
library(fpc)      # for plotting clusters with plotcluster(), validating clusters
install.packages("fpc")
teens <- read.csv("C:/Users/Mukesh/Downloads/snsdata.csv")
str(teens) # Get all the attributes, type, and other information
table(teens$gradyear, useNA = "ifany")
table(teens$gradyear, useNA = "ifany")
table(teens$gender, useNA = "ifany")
summary(teens$age)
summary(teens$friends)
library(ggplot2)  # For Visulaization
library(lattice)  # Support package for visualization
library(stats)    # for statistical calculations and random number generation.
library(cluster)  # for plotting clusters with clusplot()
library(fpc)      # for plotting clusters with plotcluster(), validating clusters
teens <- read.csv("C:/Users/Mukesh/Downloads/snsdata.csv")
str(teens) # Get all the attributes, type, and other information
table(teens$gradyear, useNA = "ifany")
datas = read.csv("Desktop/1_clustering_BLR_PCA_CDB_2918_F_Census.csv")
datas = read.csv("C:/Users/Mukesh/Desktop/1_clustering_BLR_PCA_CDB_2918_F_Census.csv")
datas
View(datas)
View(datas)
datase = datas[,9:]
datase = datas[,9:
datas$EB_Code
datas = read.csv("C:/Users/Mukesh/Desktop/1_clustering_BLR_PCA_CDB_2918_F_Census.csv")
datas$EB_Code
data1 = datas[9:]
summary(datas)
col(datas)
data1 = datas[9:96]
View(data1)
View(data1)
summary(data1)
data1 = datas[11:96]
summary(data1)
data1 = datas[12:96]
summary(data1)
data1 = scale(data1)
View(data1)
View(data1)
install.packages("caTools")
library(caTools)
set.seed(123)
kmeans = kmeans(data1,5,iter.max = 300,nstart = 10)
library(cluster)
clusplot(data1,kmeans$cluster,lines = 0,shade = TRUE,color = TRUE)
set(6)
for (i in 1:15) wcss[i]<-sum(kmeans(data1,i)$withinss)
set(6)
wcss <- vector()
wcss = vector()
for (i in 1:15) wcss[i]<-sum(kmeans(data1,i)$withinss)
wcss
plot(1:15,wcss,type = 'b',main = paste('cluster'),xlab = 'number',ylab = 'wcss')
kmeans = kmeans(data1,3,iter.max = 300,nstart = 10)
library(cluster)
clusplot(data1,kmeans$cluster,lines = 0,shade = TRUE,color = TRUE)
set(6)
wcss = vector()
datas = read.csv("C:/Users/Mukesh/Desktop/1_clustering_BLR_PCA_CDB_2918_F_Census.csv")
summary(datas)
col(datas)
data1 = datas[9:96]
summary(data1)
data1 = scale(data1)
library(caTools)
data1$Level  = factor(data1$Level,labels.default(1,2,3,4,5))
View(data1)
View(data1)
datas = read.csv("C:/Users/Mukesh/Desktop/1_clustering_BLR_PCA_CDB_2918_F_Census.csv")
summary(datas)
col(datas)
data1 = datas[9:96]
summary(data1)
data1$Level  = factor(data1$Level)
View(data1)
summary(data1$Level)
data1$Level  = factor(data1$Level,levels = c('CD BLOCK','OG','TOWN','VILLAGE'),labels = c(1,2,3,4))
View(data1)
summary(data1$Total.Rural.Urban)
data1$Total.Rural.Urban = factor(data1$Total.Rural.Urban,levels = c('Rural','Total','Urban'))
data1 = data1[-2]
View(data1)
datas = read.csv("C:/Users/Mukesh/Desktop/1_clustering_BLR_PCA_CDB_2918_F_Census.csv")
summary(datas)
col(datas)
data1 = datas[9:96]
summary(data1)
summary(data1$Level)
data1$Level  = factor(data1$Level,levels = c('CD BLOCK','OG','TOWN','VILLAGE'),labels = c(1,2,3,4))
data1$Total.Rural.Urban = factor(data1$Total.Rural.Urban,levels = c('Rural','Total','Urban'),labels = c(1,2,3))
data1 = data1[-2]
data1 = scale(data1)
View(data1)
data1 = scale(data1)
datas = read.csv("C:/Users/Mukesh/Desktop/1_clustering_BLR_PCA_CDB_2918_F_Census.csv")
summary(datas)
col(datas)
data1 = datas[9:96]
summary(data1)
summary(data1$Level)
data1$Level  = factor(data1$Level,levels = c('CD BLOCK','OG','TOWN','VILLAGE'),labels = c(1,2,3,4))
data1$Total.Rural.Urban = factor(data1$Total.Rural.Urban,levels = c('Rural','Total','Urban'),labels = c(1,2,3))
View(data1)
summary(data1)
data1 = data1[-2]
View(data1)
data1 = scale(data1,center = TRUE,scale = TRUE)
library(caTools)
data1 = scale(data1,center = TRUE,scale = TRUE)
View(cars)
View(cars)
View(students3)
View(students3)
dim(data1)
dim(data1)[2]
for i in range(dim(data1)[2]) data[i] <- if else(is.na(data1[i]),ave(data1[i],FUN = mean)
#scaling yhe data set
data1 = scale(data1,center = TRUE,scale = TRUE)
data1
library(caTools)
set.seed(123)
kmeans = kmeans(data1,3,iter.max = 300,nstart = 10)
library(cluster)
clusplot(data1,kmeans$cluster,lines = 0,shade = TRUE,color = TRUE)
set(6)
wcss = vector()
for (i in 1:15) wcss[i]<-sum(kmeans(data1,i)$withinss)
plot(1:15,wcss,type = 'b',main = paste('cluster'),xlab = 'number',ylab = 'wcss')
for i in range(dim(data1)[2]) data[i] <- if else(is.na(data1[i]),ave(data1[i],FUN = mean)
#scaling yhe data set
data1 = scale(data1,center = TRUE,scale = TRUE)
data1
library(caTools)
set.seed(123)
kmeans = kmeans(data1,3,iter.max = 300,nstart = 10)
library(cluster)
clusplot(data1,kmeans$cluster,lines = 0,shade = TRUE,color = TRUE)
set(6)
wcss = vector()
for (i in 1:15) wcss[i]<-sum(kmeans(data1,i)$withinss)
plot(1:15,wcss,type = 'b',main = paste('cluster'),xlab = 'number',ylab = 'wcss')
data1 = datas[12:96]
summary(data1)
data1 = scale(data1,center = TRUE,scale = TRUE)
data1
library(caTools)
set.seed(123)
kmeans = kmeans(data1,3,iter.max = 300,nstart = 10)
library(cluster)
clusplot(data1,kmeans$cluster,lines = 0,shade = TRUE,color = TRUE)
set(6)
wcss = vector()
for (i in 1:15) wcss[i]<-sum(kmeans(data1,i)$withinss)
plot(1:15,wcss,type = 'b',main = paste('cluster'),xlab = 'number',ylab = 'wcss')
set.seed(6)
wcss = vector()
for (i in 1:15) wcss[i]<-sum(kmeans(data1,i)$withinss)
plot(1:15,wcss,type = 'b',main = paste('cluster'),xlab = 'number',ylab = 'wcss')
datasets::iris
iris = datasets::iris
str(iris)
iris$Species = asfactor(iris$Species)
iris$Species = as.factor(iris$Species)
str(iris)
library(cluster)
dat <- iris[-5]
View(iris)
View(iris)
dat <- iris[,-5]
view(dat)
iris = datasets::iris
str(iris)
library(cluster)
dat <- iris[,-5]
View(dat)
View(dat)
clus <- kmeans(dat,3)
library(fpc)
dat <- iris[,-5]
clus <- kmeans(dat,3)
plotcluster(dat,clus$cluster)
dat <- iris
clus <- kmeans(dat,3)
iris = datasets::iris
str(iris)
library(cluster)
library(fpc)
dat <- iris
clus <- kmeans(dat,3)
dat <- iris[,-5]
clus <- kmeans(dat,3)
plotcluster(dat,clus$cluster)
iris$Species = factor(iris$Species)
plotcluster(iris,clus$cluster)
clus <- kmeans(iris,3)
plotcluster(iris,clus$cluster)
clus <- kmeans(iris,3,na.rm=TRUE)
iris <- iris[,-5]
clus <- kmeans(iris,3)
plotcluster(iris,clus$cluster)
iris = datasets::iris
str(iris)
library(cluster)
library(fpc)
iris$Species = factor(iris$Species)
iris <- iris[,-5]
clus <- kmeans(iris,3)
plotcluster(iris,clus$cluster)
iris = datasets::iris
str(iris)
library(cluster)
library(fpc)
iris$Species = factor(iris$Species)
iris <- iris[,-5]
wcss = vector()
for (i in 1:15) wcss[i]<-sum(kmeans(iris,i)$withinss)
plot(1:15,wcss,type = 'b',main = paste("lets see"),xlab = "yoyo",ylab = "honey singh")
clus <- kmeans(iris,4)
plotcluster(iris,clus$cluster)
library(clusplot)
clusplot(iris,clus$cluster,shade = TRUE,labels =1,lines = 0)
iris = datasets::iris
str(iris)
library(cluster)
library(fpc)
iris$Species = factor(iris$Species)
iris <- iris[,-5]
wcss = vector()
for (i in 1:15) wcss[i]<-sum(kmeans(iris,i))
for (i in 1:15) wcss[i]<-sum(kmeans(iris,i)$withinss)
plot(1:15,wcss,type = 'b',main = paste("lets see"),xlab = "yoyo",ylab = "honey singh")
clus <- kmeans(iris,6)
plotcluster(iris,clus$cluster)
library(clusplot)
clusplot(iris,clus$cluster,shade = TRUE,labels =1,lines = 0)
iris
x = iris
x = x[,-5]
wcss = vector()
for (i in 1:15) wcss[i] <-sum(kmeans(x,i)$witninss)
plot(1:15,wcss,main = "dcdv")
plot(1:15,wcss,type = 'b',main = "dcdv")
for (i in 1:15) wcss[i]<-sum(kmeans(x,i)$withinss)
plot(1:15,wcss,type = 'b',main = paste("lets see"),xlab = "yoyo",ylab = "honey singh")
plot(1:15,wcss,type = 'b',main = paste("dcdv"))
plot(1:15,wcss,type = 'b',main = "dcdv")
iris
x = iris
x = x[,-5]
wcss = vector()
for (i in 1:15) wcss[i]<-sum(kmeans(x,i)$witninss)
plot(1:15,wcss,type = 'b',main = "dcdv")
plot(1:15,wcss,type = 'b',main = paste("dcdv"))
iris
x = iris
x = x[,-5]
wcss = vector()
for (i in 1:15) wcss[i]<-sum(kmeans(x,i)$witninss)
plot(1:15,wcss,type = 'b',main = paste("dcdv"))
for (i in 1:15) wcss[i]<-sum(kmeans(x,i)$withinss)
plot(1:15,wcss,type = 'b',main = paste("lets see"),xlab = "yoyo",ylab = "honey singh")
plot(1:15,wcss,type = 'b',main = paste("dcdv"))
plot(1:15,wcss,type = 'b',main = paste("dcdv"))
for (i in 1:15) wcss[i]<-sum(kmeans(x,i)$withinss)
iris
x = iris
x = x[,-5]
wcss = vector()
for (i in 1:15) wcss[i]<-sum(kmeans(x,i)$witninss)
plot(1:15,wcss,type = 'b',main = paste("dcdv"))
iris
x = iris
x = x[,-5]
wcss = vector()
wcss2 = vector()
wcss = wcss2
for (i in 1:15) wcss[i]<-sum(kmeans(x,i)$witninss)
plot(1:15,wcss,type = 'b',main = paste("dcdv"))
plot(1:15,wcss2,type = 'b',main = paste("lets see"),xlab = "yoyo",ylab = "honey singh")
iris
x = iris
x = x[,-5]
wcss = vector()
wcss2 = vector()
wcss = wcss2
for (i in 1:15) wcss[i]<-sum(kmeans(x,i)$witninss)
plot(1:15,wcss,type = 'b',main = paste("dcdv"))
for (i in 1:15) wcss2[i]<-sum(kmeans(x,i)$withinss)
plot(1:15,wcss2,type = 'b',main = paste("lets see"),xlab = "yoyo",ylab = "honey singh")
iris
x = iris
x = x[,-5]
wcss = vector()
wcss2 = vector()
wcss = wcss2
for (i in 1:15) wcss[i]<-sum(kmeans(x,i)$witninss)
plot(1:15,wcss,type = 'b',main = paste("dcdv"))
for (i in 1:15) wcss2[i]<-sum(kmeans(x,i)$withinss)
plot(1:15,wcss2,type = 'b',main = paste("lets see"),xlab = "yoyo",ylab = "honey singh")
for (i in 1:15) wcss[i]<-sum(kmeans(x,i)$withinss)
plot(1:15,wcss,type = 'b',main = paste("dcdv"))
for (i in 1:15) wcss2[i]<-sum(kmeans(x,i)$withinss)
plot(1:15,wcss2,type = 'b',main = paste("lets see"),xlab = "yoyo",ylab = "honey singh")
dendogram = hclust(dist(x,method = 'euclidean'),method = 'ward.D)
dendogram = hclust(dist(x,method = 'euclidean'),method = 'ward.D)
ylab = 'euclideandist'
iris
x = iris
x = x[,-5]
wcss = vector()
wcss2 = vector()
wcss = wcss2
for (i in 1:15) wcss[i]<-sum(kmeans(x,i)$withinss)
plot(1:15,wcss,type = 'b',main = paste("dcdv"))
for (i in 1:15) wcss2[i]<-sum(kmeans(x,i)$withinss)
plot(1:15,wcss2,type = 'b',main = paste("lets see"),xlab = "yoyo",ylab = "honey singh")
dendogram = hclust(dist(x,method = 'euclidean'),method = 'ward.D)
plot('Dendogram'),
xlab = 'customer',
ylab = 'euclideandist'
ylab = 'euclideandist')
dendogram = hclust(dist(x,method = 'euclidean'),method = 'ward.D')
plot(dendogram,main = paste("sfdg"),
xlab = 'customer',
ylab = 'euclideandist')
plot(dendogram,
main = paste("sfdg"),
xlab = 'customer',
ylab = 'euclideandist')
iris
x = iris
x = x[,-5]
wcss = vector()
wcss2 = vector()
wcss = wcss2
for (i in 1:15) wcss[i]<-sum(kmeans(x,i)$withinss)
plot(1:15,wcss,type = 'b',main = paste("dcdv"))
for (i in 1:15) wcss[i]<-sum(kmeans(x,i)$withinss)
for (i in 1:15) wcss[i]<-sum(kmeans(x,i)$withinss)
plot(1:15,wcss,type = 'b',main = paste("dcdv"))
for (i in 1:15) wcss2[i]<-sum(kmeans(x,i)$withinss)
plot(1:15,wcss2,type = 'b',main = paste("lets see"),xlab = "yoyo",ylab = "honey singh")
dendogram = hclust(dist(x,method = 'euclidean'),method = 'ward.D')
plot(dendogram,
main = paste("sfdg"),
xlab = 'customer',
ylab = 'euclideandist')
hc = hclust(dist(x,method = 'euclidean'),method='ward.D')
y_hc = cutree(hc,5)
clusplot(x,y_hc,shade = TRUE,labels =1,lines = 0)
library(clusplot)
library(clusplot)
clusplot(iris,clus$cluster,shade = TRUE,labels =1,lines = 0)
iris = datasets::iris
str(iris)
library(cluster)
iris$Species = factor(iris$Species)
iris <- iris[,-5]
wcss = vector()
for (i in 1:15) wcss[i]<-sum(kmeans(iris,i)$withinss)
plot(1:15,wcss,type = 'b',main = paste("lets see"),xlab = "yoyo",ylab = "honey singh")
clus <- kmeans(iris,6)
plotcluster(iris,clus$cluster)
library(clusplot)
clusplot(iris,clus$cluster,shade = TRUE,labels =1,lines = 0)
iris
x = iris
x = x[,-5]
wcss = vector()
wcss2 = vector()
wcss = wcss2
for (i in 1:15) wcss[i]<-sum(kmeans(x,i)$withinss)
plot(1:15,wcss,type = 'b',main = paste("dcdv"))
for (i in 1:15) wcss2[i]<-sum(kmeans(x,i)$withinss)
plot(1:15,wcss2,type = 'b',main = paste("lets see"),xlab = "yoyo",ylab = "honey singh")
dendogram = hclust(dist(x,method = 'euclidean'),method = 'ward.D')
plot(dendogram,
main = paste("sfdg"),
xlab = 'customer',
ylab = 'euclideandist')
hc = hclust(dist(x,method = 'euclidean'),method='ward.D')
y_hc = cutree(hc,5)
clusplot(x,y_hc,shade = TRUE,labels =1,lines = 0)
library(clusplot)
clusplot(x,y_hc,shade = TRUE,labels =1,lines = 0)
library(cluster)
clusplot(x,y_hc,shade = TRUE,labels =1,lines = 0)
load("C:/Users/Mukesh/Desktop/c1program/obj/projj/Continuous_Data_weekly.csv")
setwd("C:/Users/Mukesh/Desktop/c1program/obj/projj")
library("lubridate") #To Convert into Date format (mm/dd/yy).
library("forecast")#used for time-series forecasting.
cleaned = read.csv("Continuous_Data_V2.csv")#reading the C.S.V file.
setwd("C:/Users/Mukesh/Desktop/c1program/obj/projj")
